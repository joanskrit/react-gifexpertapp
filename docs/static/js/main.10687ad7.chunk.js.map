{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","console","log","preventDefault","trim","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","className","GifExpertApp","categorias","setCategorias","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OAEI,uBAAMC,SAbW,SAACC,GAClBC,QAAQC,IAAI,UACZF,EAAEG,iBAGGN,EAAWO,OAAOC,OAAS,IAC5BV,GAAe,SAAAW,GAAQ,OAAKT,GAAL,mBAAoBS,OAC3CR,EAAc,MAMlB,UACI,6BAAKD,IACL,uBAAOU,KAAK,OAAOC,MAAOX,EAAYY,SAnBpB,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,c,+BCNlBG,EAAO,uCAAG,WAAOL,GAAP,uBAAAM,EAAA,6DAGbC,EAHa,iDAGmCC,UAAUR,GAH7C,gEAIAS,MAAOF,GAJP,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeXM,GAfW,4CAAH,sDCGPO,EAAU,SAAC,GAAoB,IAAjBpB,EAAgB,EAAhBA,SAAgB,ECDf,SAAEA,GAAe,IAAD,EAEdV,mBAAS,CAC/BsB,KAAM,GACNS,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA+BxC,OAxBAC,qBAAW,WAEPnB,EAAQL,GAAUyB,MAAO,SAAAC,GAErBC,YAAW,WAEPJ,EACI,CACIX,KAAMc,EACNL,SAAS,MAGlB,UAGR,CAACrB,IAEJ2B,YAAW,WACPJ,EAAS,CACLX,KAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACnBS,SAAS,MAEd,KAEIC,ED3B0BM,CAAa5B,GAAjCkB,EAH0B,EAG/BN,KAAaS,EAHkB,EAGlBA,QAIrB,OACI,qCACI,6BAAKrB,IAEJqB,GAAW,wCAEZ,qBAAKQ,UAAU,8CAAf,SAEQX,EAAOJ,KAAK,SAAAC,GACR,eAA8BA,GAAZA,EAAIC,YEjBjCc,EAAe,WAAM,MAGMxC,mBAAS,CAAC,cAHhB,mBAGvByC,EAHuB,KAGXC,EAHW,KAK9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAa3C,cAAiB2C,IAC9B,uBAEA,6BAEQD,EAAWjB,KAAK,SAAAd,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADNA,Y,MCdjCiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.10687ad7.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        console.log('Submit');\r\n        e.preventDefault();\r\n        \r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( category => [inputValue, ...category]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit= {handleSubmit}>\r\n            <h1>{inputValue}</h1>\r\n            <input type=\"text\" value={inputValue} onChange={handleInputChange}>\r\n            </input>\r\n\r\n        </form>\r\n            \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n    //This exercise is based on an api from giphy.\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)} &limit=10&api_key=XRK08CvEgBDKeynbejrtJrCVYqCgyIAT`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return  gifs;\r\n\r\n}","import React, {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p>Loading</p>}\r\n\r\n            <div className=\"card-grid animate__animated animate__bounce\">\r\n                {\r\n                    images.map( img => {\r\n                        <GifGridItem key={img.id} {...img} />\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n   \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(category).then ( imgs => {\r\n\r\n            setTimeout(() => {\r\n                \r\n                setState( \r\n                    {\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n\r\n            }, 3000);            \r\n        })\r\n\r\n    }, [category])\r\n\r\n    setTimeout(() => {\r\n        setState({\r\n            data: [1,2,3,4,5,6,7],\r\n            loading: false\r\n        })\r\n    }, 3000);\r\n\r\n    return state;\r\n\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categorias = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categorias, setCategorias] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategorias}/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map( category => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={ category }\r\n                        />\r\n                     ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}